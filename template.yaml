AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
    acm-expenses
    
    keep track of all acm expenses 

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
    Function:
        Timeout: 5
        AutoPublishAlias: live # More info about Safe Deployments: https://github.com/awslabs/serverless-application-model/blob/master/docs/safe_lambda_deployments.rst
        DeploymentPreference:
            Type: Linear10PercentEvery1Minute 


Resources:

    ExpenseFunction:
        Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
        Properties:
            CodeUri: ./first_function # .aws-sam/build/template.yaml  # first_function/build/
            Handler: app.lambda_handler
            Runtime: python3.7 # https://docs.aws.amazon.com/lambda/latest/dg/lambda-x-ray.html
            Events:
                Post:
                    Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
                    Properties:
                        Path: /reimburse
                        Method: POST
                        RestApiId: !Ref ExpenseApi
            Policies:
                - AWSLambdaVPCAccessExecutionRole
                - AmazonDynamoDBFullAccess
                - Version: '2012-10-17'
                  Statement:
                      - Sid: Stmt1467321765000
                        Effect: Allow
                        Action:
                            - apigateway:*
                        Resource:
                             - "*"

    ApiGatewayInvokeLambdaPermission:
        Type: "AWS::Lambda::Permission"
        Properties:
            Action: lambda:InvokeFunction
            FunctionName: !GetAtt
                - ExpenseFunction
                - Arn
            Principal: apigateway.amazonaws.com
            SourceArn: !Join [
                "", [
                "arn:aws:execute-api:",
                {"Ref": "AWS::Region"}, ":",
                {"Ref": "AWS::AccountId"}, ":",
                !Ref ExpenseApi, "/*/*/*"
      ]
      ]

    ExpenseApi:
        Type: AWS::Serverless::Api
        Properties:
            StageName: stage1

    DynamoDBTable:
        Type: AWS::DynamoDB::Table
        Properties:
            TableName: "ReimbursementsTable"
            AttributeDefinitions:
                - AttributeName: "ReimbursementSeeker"
                  AttributeType: "S"
                - AttributeName: "DateAdded"
                  AttributeType: "S"
            KeySchema:
                - AttributeName: "ReimbursementSeeker"
                  KeyType: "HASH"
                - AttributeName: "DateAdded"
                  KeyType: "RANGE"
            ProvisionedThroughput:
                ReadCapacityUnits: "10"
                WriteCapacityUnits: "10"


